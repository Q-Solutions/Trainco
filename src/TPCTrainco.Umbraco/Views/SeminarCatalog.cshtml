@using TPCTrainco.Umbraco.Extensions.Helpers
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Base.cshtml";

    IPublishedContent siteSettings = Nodes.Instance.SiteSettings;
    IPublishedContent currentPage = Model.Content;
    IPublishedContent parentPage = currentPage.Parent;
    IEnumerable<IPublishedContent> seminarCategories = parentPage.Children.Where(p => p.DocumentTypeAlias != "SeminarCatalog").OrderBy("SortOrder");

    IPublishedContent onsitePromo = siteSettings.GetPropertyValue<IPublishedContent>("activePromo");
    IEnumerable<IPublishedContent> activeSeminarList = currentPage.GetPropertyValue<IEnumerable<IPublishedContent>>("activeSeminars");
    IEnumerable<IPublishedContent> userQuoteList = currentPage.GetPropertyValue<IEnumerable<IPublishedContent>>("userQuotes");
}

<div class="container-fluid headline-section">
    <div class="container">
        <div class="jumbotron">
            <h1>@(currentPage.GetPropertyValue<string>("pageHeadline", currentPage.Name))</h1>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-xs-12 col-sm-10 col-sm-offset-1 catalog-top">
            @Html.Raw(currentPage.GetPropertyValue<string>("mainContent"))

            <ul class="col-md-8 col-md-offset-2">
                @foreach (IPublishedContent item in seminarCategories)
                {
                    string colClass = "col-md-3";
                    string menuText = item.GetPropertyValue<string>("shortName", item.Name);
                    string anchorText = menuText.ToUrlSegment();

                    if (menuText.Length > 22)
                    {
                        colClass = "col-md-4";
                    }
                    else if (menuText.Length < 8)
                    {
                        colClass = "col-md-2";
                    }

                    <li class="col-xs-6 @(colClass)"><a href="#@(anchorText)" class="regular-link class-category">@(menuText)</a></li>
                }
            </ul>
            <!--<div class="button-wrap" style="
                display: block;
                width: 350px;
                margin: 62px auto;
                /* border: 1px solid; */
                text-align: center;
            ">
                            <a href="/search-seminars/" class="btn-reg" role="button" style="
                float: left;
            ">U.S. Seminars</a>
                            <a href="/search-seminars/" class="btn-reg" role="button" style="
                float: right;
            ">Canada Seminars</a>
                        </div> -->
        </div>
    </div>
</div>

<div class="container">

    @foreach (IPublishedContent item in seminarCategories)
    {
        string menuText = item.GetPropertyValue<string>("shortName", item.Name);
        string anchorText = menuText.ToUrlSegment();
        bool isElectrical = item.Name.IndexOf("Electrical") >= 0;

        <div class="col-xs-12 course-section@(true == isElectrical ? " electric" : "")">
            <div class="row">
                <div class="col-md-9 col-md-offset-1">
                    <a href="@item.Url">
                        <h2 id="@(anchorText)">@(menuText)</h2>
                    </a>

                    @if (true == isElectrical)
                    {
                        <ul class="sort">
                            <li class="current col-xs-6 col-md-2"><a href="#" class="elec-sort-category regular-link" data-category="all">All</a></li>
                            @foreach (IPublishedContent subItem in item.Children)
                            {
                                string subMenuText = subItem.GetPropertyValue<string>("shortName", subItem.Name);
                                string subAnchorText = subMenuText.ToUrlSegment();

                                <li class="col-xs-6 col-md-3"><a href="#" class="elec-sort-category regular-link" data-category="@(subAnchorText)">@(subMenuText)</a></li>
                            }
                        </ul>

                        <p class="elec-description">@(item.GetPropertyValue<string>("pageTitle"))</p>
                    }
                    else
                    {
                        <p>@(item.GetPropertyValue<string>("pageTitle"))</p>
                    }


                </div>

                <ul class="col-xs-12">
                    @if (true == isElectrical)
                    {
                        foreach (IPublishedContent subItem in item.Children)
                        {
                            string subMenuText = subItem.GetPropertyValue<string>("shortName", subItem.Name);
                            string subAnchorText = subMenuText.ToUrlSegment();
                            
                            foreach (IPublishedContent subSubItem in subItem.Children)
                            {
                                string imageUrl = subSubItem.GetCropUrl("image", "Image");

                                if (true == string.IsNullOrEmpty(imageUrl) || (imageUrl.IndexOf(".jpg") < 0 && imageUrl.IndexOf(".png") < 0))
                                {
                                    imageUrl = "/images/selectall-icon.jpg";
                                }
                                
                                <li class="seminar-topic col-xs-6 col-md-4" data-type="@(subAnchorText)">
                                    <a href="@(subSubItem.Url)">
                                        <div class="overlay-contain">
                                            <div class="overlay"></div>
                                            <img src="@(imageUrl)" alt="@(subSubItem.GetPropertyValue<string>("pageTitle", subItem.Name))" />
                                        </div>
                                        <p>@(subSubItem.GetPropertyValue<string>("pageTitle", subItem.Name))</p>
                                    </a>
                                </li>
                            }
                        }
                    }
                    else
                    {
                        foreach (IPublishedContent subItem in item.Children)
                        {
                            string imageUrl = subItem.GetCropUrl("image", "Image");

                            if (true == string.IsNullOrEmpty(imageUrl) || (imageUrl.IndexOf(".jpg") < 0 && imageUrl.IndexOf(".png") < 0))
                            {
                                imageUrl = "/images/selectall-icon.jpg";
                            }
                            
                            <li class="seminar-topic col-xs-6 col-md-4">
                                <a href="@(subItem.Url)">
                                    <div class="overlay-contain">
                                        <div class="overlay"></div>
                                        <img src="@(imageUrl)" alt="@(subItem.GetPropertyValue<string>("pageTitle", subItem.Name))" />
                                    </div>
                                    <p>@(subItem.GetPropertyValue<string>("pageTitle", subItem.Name))</p>
                                </a>
                            </li>
                        }
                    }

                </ul>
            </div>
        </div>
    }
</div>