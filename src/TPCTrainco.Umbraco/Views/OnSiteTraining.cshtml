@using Umbraco.Core.Models
@using TPCTrainco.Umbraco.Extensions.Helpers
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Base.cshtml";

    IPublishedContent siteSettings = Nodes.Instance.SiteSettings;
    IPublishedContent currentPage = Model.Content;

    IPublishedContent onsitePromo = siteSettings.GetPropertyValue<IPublishedContent>("activePromo");
    IEnumerable<IPublishedContent> activeSeminarList = currentPage.GetPropertyValue<IEnumerable<IPublishedContent>>("activeSeminars");

    IEnumerable<IPublishedContent> seminarCategoryList = Nodes.SeminarCategoryList();

    IEnumerable<IPublishedContent> onsiteCoursesList = Nodes.OnSiteTraining().Children.FirstOrDefault().Children;

    string message = "";

    if (false == string.IsNullOrEmpty(Request.QueryString["form"]))
    {
        if (Request.QueryString.Get("form") == "success")
        {
            message = "<div class=\"alert alert-success\">Thank you for contacting us. We will respond to your inquiry within two business days.</div>";
        }
    }
}

<div class="container-fluid headline-section onsite">
    <div class="row">
        <div class="jumbotron">
            <h1>@(currentPage.GetPropertyValue<string>("pageTitle", currentPage.Name))</h1>
        </div>
        <a href="#cf-container" class="btn-reg" role="button">Get a Quote</a>
    </div>
</div>
<div class="container-fluid gradient-bg main-content">
    <div class="container">
        @Html.Raw(message)
        <div class="row">
            <div class="col-md-8 col-md-offset-2 text-wrap">

                <div class="page-content">
                    @Html.Raw(currentPage.GetPropertyValue<string>("mainContent"))
                </div>
            </div>
        </div>
    </div>
</div>

<div class="caro-form-container" id="cf-container">
    <div class="container">
        <div class="form-wrap pull-right col-xs-12 col-md-6">
            @CurrentPage.form
        </div>


        <!-- course-list -->
        <div class="carousel slide col-xs-12 col-md-6 col-md-pull-6">
            @if (seminarCategoryList != null && seminarCategoryList.Any())
            {
                <h3>Our courses available for on-site training include:</h3>

                foreach (IPublishedContent node in seminarCategoryList)
                {
                    bool isElectrical = node.Name.IndexOf("Electrical") >= 0;

                    <h3><a href="@node.Url">@(node.Name)</a></h3>

                    if (true == isElectrical)
                    {
                        <ul>
                            @foreach (IPublishedContent subItem in node.Children)
                            {
                                foreach (IPublishedContent subSubItem in subItem.Children)
                                {
                                    <li>@(subSubItem.Name)</li>
                                }
                            }
                        </ul>
                    }
                    else
                    {
                      <ul>
                        foreach (IPublishedContent subItem in node.Children)
                        {
                            <li>@(subItem.Name)</li>
                        }
                        </ul>
                    }
                }
            }
        </div>
        <!-- end course-list -->

    </div>
</div> <!-- end container -->
