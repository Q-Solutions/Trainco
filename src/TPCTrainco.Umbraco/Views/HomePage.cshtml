@using TPCTrainco.Umbraco.Extensions.Helpers
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Base.cshtml";

    IPublishedContent siteSettings = Nodes.Instance.SiteSettings;
    IPublishedContent currentPage = Model.Content;

    IPublishedContent homePageSectionFolder = Nodes.Instance.SiteSettings.Children.FirstOrDefault(n => n.IsDocumentType("HomePageSections"));
    IEnumerable<IPublishedContent> homePageSections = homePageSectionFolder.Children;

    IPublishedContent homePageQuoteSliderFolder = Nodes.Instance.SiteSettings.Children.FirstOrDefault(n => n.IsDocumentType("HomePageQuoteSlider"));
    IEnumerable<IPublishedContent> homePageQuoteSlides = homePageQuoteSliderFolder.Children;
}

<div class="container-fluid intro-section">
    <div class="container">
        <div class="jumbotron">
            <h1>@(currentPage.GetPropertyValue<string>("welcomeHeadline"))</h1>
            @Html.Raw(currentPage.GetPropertyValue<string>("welcomeMessage"))
        </div>

        @* == Search Section == *@
        <div class="row">
            <div class="col-md-11 topic-circles">
                <h3>Select one or more topics and choose your location</h3>
                <ul>
                    <li class="seminar-topic">
                        <div class="overlay-contain">
                            <div class="overlay"></div>
                            <img src="/assets/images/selectall-icon.jpg" alt="Mechanical + Industrial" />
                        </div>
                        <p>Search All Seminars</p>
                    </li>
                    <li class="seminar-topic">
                        <div class="overlay-contain">
                            <div class="overlay"></div>
                            <img src="/assets/images/electrical.jpg" alt="Mechanical + Industrial" />
                        </div>
                        <p>Electrical</p>
                    </li>
                    <li class="seminar-topic">
                        <div class="overlay-contain">
                            <div class="overlay"></div>
                            <img src="/assets/images/plantmgmt-icon.jpg" alt="Mechanical + Industrial" />
                        </div>
                        <p>Plant Management</p>
                    </li>
                    <li class="seminar-topic">
                        <div class="overlay-contain">
                            <div class="overlay"></div>
                            <img src="/assets/images/hvac-icon.jpg" alt="Mechanical + Industrial" />
                        </div>
                        <p>HVAC</p>
                    </li>
                    <li class="seminar-topic">
                        <div class="overlay-contain">
                            <div class="overlay"></div>
                            <img src="/assets/images/mechanical-icon.jpg" alt="Mechanical + Industrial" />
                        </div>
                        <p>Mechanical &amp; Industrial</p>
                    </li>

                </ul>

                <!-- search bar here -->
                <form name="main-search" class="main-search-form">
                    <input type="text" name="seminar-search" placeholder="Choose a Location">
                </form>
                <a href="#" class="btn-reg btn-white" role="button">Search</a>
            </div>
        </div>

    </div>
</div>

@{
    int calloutCount = 0;
    int trainingCount = 0;
    
    foreach (IPublishedContent section in homePageSections)
    {
        if (section.DocumentTypeAlias == "HomePageSectionCallout")
        {
            var displayOpposite = calloutCount % 2 == 0;

            @Html.Raw(RenderCallout(section, !displayOpposite))
            calloutCount++;
        }
        else if (section.DocumentTypeAlias == "HomePageSectionTrainingType")
        {
            var displayOpposite = trainingCount % 2 == 0;

            @Html.Raw(RenderTraining(section, !displayOpposite))
            trainingCount++;
        }
    }
}




<!-- Carousel -->
<div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators">
        @{
            int slideCount = 0;

            foreach (IPublishedContent slide in homePageQuoteSlides)
            {
                string classActive = slideCount == 0 ? " class=\"active\"" : "";

                <li data-target="#carousel-example-generic" data-slide-to="@slideCount"@(Html.Raw(classActive))></li>
            
                slideCount++;
            }
        }
    </ol>

    <!-- Wrapper for slides -->
    <div class="carousel-inner" role="listbox">
        @{
            slideCount = 0;

            foreach (IPublishedContent slide in homePageQuoteSlides)
            {
                string classActive = slideCount == 0 ? " active" : "";

                <div class="item@(Html.Raw(classActive))">
                    <div class="carousel-caption">
                        <p class="quote">@Html.Raw(slide.GetPropertyValue<string>("quoteText"))</p>
                        <p class="citation"><span>@(slide.GetPropertyValue<string>("quoteAuthor"))</span>, @(slide.GetPropertyValue<string>("quoteCompany"))</p>
                    </div>
                </div>
            
                slideCount++;
            }
        }
    </div>

    <!-- Controls -->
    <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
        <img src="/assets/images/left-arrow.png" class="arrow-left" aria-hidden="true" />
        <span class="sr-only">Previous</span>
    </a>

    <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
        <img src="/assets/images/right-arrow.png" class="arrow-right" aria-hidden="true" />
        <span class="sr-only">Next</span>
    </a>
</div> <!-- end carousel -->

@helper RenderCallout(IPublishedContent section, bool displayOpposite = false)
{
    string headline = section.GetPropertyValue<string>("calloutHeadline");
    string message = section.GetPropertyValue<string>("calloutText");
    string buttonText = section.GetPropertyValue<string>("calloutButtonText");
    UrlPicker.Umbraco.Models.UrlPicker link = section.GetPropertyValue<UrlPicker.Umbraco.Models.UrlPicker>("calloutLink");

    <div class="container-fluid onsite-section">
        <div class="left-skew">
            <div class="skewed-side">
                <div class="inner">
                    <h2 class="callout-headline">@headline</h2>
                    @Html.Raw(message)
                    <a href="@link.Url" class="btn-reg btn-white" role="button">@buttonText</a>
                </div>
            </div>
        </div>
        <div class="right-img">
            <img src="/assets/images/on-site.jpg" alt="See our on-site programs">
        </div>
    </div>
}

@helper RenderTraining(IPublishedContent section, bool displayOpposite = false)
{
    string headline = section.GetPropertyValue<string>("trainingHeadline");
    string message = section.GetPropertyValue<string>("trainingDescription");
    string buttonText = section.GetPropertyValue<string>("calloutButtonText");
    var mediaItem = Umbraco.Media(section.GetPropertyValue<int>("trainingImageIcon"));

    <div class="container-fluid">
        <div class="container">
            <div class="row">
                <div class="col-sm-8@(!displayOpposite ? " col-sm-push-4" : "")">
                    <h2 class="callout-headline">@headline</h2>
                    @Html.Raw(message)
                    <p class="course-cost">4 days at $900 per person</p>
                    <!-- <button type="button" class="btn btn-default">Register</button> -->
                    <a href="#" class="btn-reg" role="button">Register</a>
                </div>
                <div class="col-sm-4@(!displayOpposite ? " col-sm-pull-8" : "")">
                    <img src="@mediaItem.Url" class="img-responsive home-highlight-circle" alt="image">
                </div>
            </div>
        </div>
    </div>
}